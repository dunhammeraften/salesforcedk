<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Email_regarding_Inactive_User</name>
        <label>Send Email regarding Inactive User</label>
        <locationX>50</locationX>
        <locationY>2771</locationY>
        <actionName>Case.Case_owner_inactive</actionName>
        <actionType>emailAlert</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Parent.ParentId</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.Case_owner_inactive</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <actionCalls>
        <name>Send_Notification_to_Case_Owner</name>
        <label>Send Notification to Case Owner</label>
        <locationX>50</locationX>
        <locationY>2171</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>Set_Awaiting_User</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>Get_Custom_Notification_Activation.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>NotificationRecipient</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Response from customer</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>NotificationBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Parent.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <actionCalls>
        <name>Send_Notification_to_User</name>
        <label>Send Notification to User</label>
        <locationX>50</locationX>
        <locationY>1355</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>Closed_Activation_Case</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>Get_Custom_Notification.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>NotificationRecipient</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Response from Customer</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>NotificationBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <apiVersion>60.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>Assign_recipient</name>
        <label>Assign recipient</label>
        <locationX>50</locationX>
        <locationY>1247</locationY>
        <assignmentItems>
            <assignToReference>NotificationRecipient</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.Parent.Owner:User.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_Notification_to_User</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_recipient_Activation</name>
        <label>Assign recipient Activation</label>
        <locationX>50</locationX>
        <locationY>2063</locationY>
        <assignmentItems>
            <assignToReference>NotificationRecipient</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.Parent.Owner:User.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_Notification_to_Case_Owner</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Activation_Case_email_notification</name>
        <label>Activation Case - email notification</label>
        <locationX>182</locationX>
        <locationY>1847</locationY>
        <defaultConnector>
            <targetReference>Set_Awaiting_User</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_Activation_Case</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Parent.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Order_Fulfilment_Case</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.Owner:User.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.Owner:User.Id</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Custom_Notification_Activation</targetReference>
            </connector>
            <label>Is Activation Case</label>
        </rules>
    </decisions>
    <decisions>
        <name>Add_Notification_to_CS_Case</name>
        <label>Add Notification to CS Case?</label>
        <locationX>182</locationX>
        <locationY>1031</locationY>
        <defaultConnector>
            <targetReference>Closed_Activation_Case</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Send_Notification_or_not</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Parent.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Customer_Service_Case</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.Owner:User.Id</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.Owner:User.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Custom_Notification</targetReference>
            </connector>
            <label>Send Notification?</label>
        </rules>
    </decisions>
    <decisions>
        <name>Change_Status_based_on_Email</name>
        <label>Change Status based on Email</label>
        <locationX>182</locationX>
        <locationY>731</locationY>
        <defaultConnector>
            <targetReference>Add_Notification_to_CS_Case</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Update_Status</name>
            <conditionLogic>1 AND (2 OR 3 OR 4 OR (5 AND 6))</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Parent.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Customer_Service_Case</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Awaiting customer</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Redirected</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Paused</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.Close_reason__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Case dismissed (customer not entitled)</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_to_Status_In_Progess</targetReference>
            </connector>
            <label>Update Status</label>
        </rules>
    </decisions>
    <decisions>
        <name>Clear_Awaiting_User</name>
        <label>Clear Awaiting User</label>
        <locationX>710</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Awaiting_user_is_true</name>
            <conditionLogic>1 AND (2 OR 3) AND 4 AND 5</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Incoming</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Customer_Service_Case</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Order_Fulfilment_Case</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.Awaiting_user__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case_to_clear_Awaiting_User</targetReference>
            </connector>
            <label>Awaiting user is true</label>
        </rules>
    </decisions>
    <decisions>
        <name>Closed_Activation_Case</name>
        <label>Closed Activation Case</label>
        <locationX>182</locationX>
        <locationY>1547</locationY>
        <defaultConnector>
            <targetReference>Activation_Case_email_notification</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Closed_or_not</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Parent.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Order_Fulfilment_Case</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Reopen_Activation_Case</targetReference>
            </connector>
            <label>Closed or not</label>
        </rules>
    </decisions>
    <decisions>
        <name>Inactive_User_email_to_Supporter</name>
        <label>Inactive User email to Supporter</label>
        <locationX>182</locationX>
        <locationY>2663</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Invoke_Email_Inactive_User</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Parent.Owner:User.Id</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.Owner:User.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_Email_regarding_Inactive_User</targetReference>
            </connector>
            <label>Invoke Email Inactive User</label>
        </rules>
    </decisions>
    <decisions>
        <name>Incoming_Email_Routing_Address</name>
        <label>Incoming Email Routing Address</label>
        <locationX>182</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>Change_Status_based_on_Email</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Email_Routing_Address</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.EmailRoutingAddress.Address</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>datanet-offer.mobil@norlys.dk</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.EmailRoutingAddress.Address</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>crossborder-delivery@norlys.dk</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.EmailRoutingAddress.Address</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>grossistnp.mobil@norlys.dk</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.EmailRoutingAddress.Address</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>sales-support@norlys.dk</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.EmailRoutingAddress.Address</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>kundeservice.erhverv@norlys.dk</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Email_Source</targetReference>
            </connector>
            <label>Email Routing Address</label>
        </rules>
    </decisions>
    <decisions>
        <name>Incoming_or_outgoing</name>
        <label>Incoming or outgoing</label>
        <locationX>446</locationX>
        <locationY>323</locationY>
        <defaultConnector>
            <targetReference>Clear_Awaiting_User</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Outgoing</defaultConnectorLabel>
        <rules>
            <name>Incoming</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Incoming</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Incoming_Email_Routing_Address</targetReference>
            </connector>
            <label>Incoming</label>
        </rules>
    </decisions>
    <decisions>
        <name>Set_Awaiting_User</name>
        <label>Set Awaiting User</label>
        <locationX>182</locationX>
        <locationY>2363</locationY>
        <defaultConnector>
            <targetReference>Inactive_User_email_to_Supporter</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Check_Case_type</name>
            <conditionLogic>(1 OR 2) AND 3</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Parent.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Order_Fulfilment_Case</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Customer_Service_Case</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.Owner:User.Id</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case_to_Awaiting_user</targetReference>
            </connector>
            <label>Check Case type</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Email Messsage - update source and status based on email {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Email Messsage - update source and status based on email</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Custom_Notification</name>
        <label>Get Custom Notification</label>
        <locationX>50</locationX>
        <locationY>1139</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_recipient</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Case_notifications</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Custom_Notification_Activation</name>
        <label>Get Custom Notification Activation</label>
        <locationX>50</locationX>
        <locationY>1955</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_recipient_Activation</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Case_notifications</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Reopen_Activation_Case</name>
        <label>Reopen Activation Case</label>
        <locationX>50</locationX>
        <locationY>1655</locationY>
        <connector>
            <targetReference>Activation_Case_email_notification</targetReference>
        </connector>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Gather information</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record.Parent</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_to_Awaiting_user</name>
        <label>Update Case to Awaiting user</label>
        <locationX>50</locationX>
        <locationY>2471</locationY>
        <connector>
            <targetReference>Inactive_User_email_to_Supporter</targetReference>
        </connector>
        <inputAssignments>
            <field>Awaiting_user__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputReference>$Record.Parent</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_to_clear_Awaiting_User</name>
        <label>Update Case to clear Awaiting User</label>
        <locationX>578</locationX>
        <locationY>539</locationY>
        <inputAssignments>
            <field>Awaiting_user__c</field>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </inputAssignments>
        <inputReference>$Record.Parent</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Email_Source</name>
        <label>Update Email Source</label>
        <locationX>50</locationX>
        <locationY>539</locationY>
        <connector>
            <targetReference>Change_Status_based_on_Email</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Source__c</field>
            <value>
                <elementReference>$Record.EmailRoutingAddress.Address</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_to_Status_In_Progess</name>
        <label>Update to Status &quot;In Progess&quot;</label>
        <locationX>50</locationX>
        <locationY>839</locationY>
        <connector>
            <targetReference>Add_Notification_to_CS_Case</targetReference>
        </connector>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>In progress</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record.Parent</inputReference>
    </recordUpdates>
    <start>
        <locationX>320</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Incoming_or_outgoing</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>EmailMessage</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>NotificationBody</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>{!$Record.Subject}</text>
    </textTemplates>
    <variables>
        <name>NotificationRecipient</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
